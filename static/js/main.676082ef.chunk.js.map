{"version":3,"sources":["Components/Groovebox/MiniGroovebox.js","Components/SequenceRating/SequenceRating.js","Components/Soundsystem/BuildedSono.js","Components/Home/Home.js","Components/Groovebox/Switch.js","Components/Groovebox/Groovebox.js","Components/Soundsystem/Soundsystem.js","Components/Navbar/Navbar.js","Components/Rules/Rules.js","constants.js","App.js","reportWebVitals.js","index.js"],"names":["MiniSwitch","props","useState","backgroundColor","setBackgroundColor","useEffect","sequence","ins","step","style","className","id","RatingStars","MiniGroovebox","mood","document","documentElement","setProperty","map","row","i","d","j","BuildedSono","topteknonumber","builded","topdubnumber","topjunglenumber","myTeknoArr","myDubArr","myJungleArr","push","number","index","src","alt","renderTop","midteknonumber","middubnumber","midjunglenumber","renderMid","kickteknonumber","kickdubnumber","kickjunglenumber","renderKick","subteknonumber","subdubnumber","subjunglenumber","renderSub","SequenceRating","currentRating","rateSequence","bpm","rate","sumArray","setRating","array","sum","length","Home","partyText","setPartyText","partyState","onClick","e","handleClickView","rating","setSequenceRating","setBuilded","hostAPartyAction","Switch","PlayStopButton","color","setColor","fakebeat","beat","isOn","handleSequence","vol01","Tone","toDestination","vol02","vol03","vol04","vol05","vol06","vol07","vol08","volumeNode","playerstekno","connect","playersdub","playersjungle","players","namestekno","namesdub","namesjungle","moodArray","beatvar","Groovebox","started","setStarted","setIsOn","setBeat","display","setDisplay","names","setNames","startStop","stop","cancel","handleBpmChange","event","setBpm","target","value","s","instIndex","newArr","setSequence","handleVolumeChange","name","volume","configLoop","start","console","log","state","repeat","time","forEach","indexOf","scheduleRepeat","for","Math","floor","type","min","max","onInput","onChange","setMood","fontSize","Soundsystem","top","tekno","NFTOwned","dub","jungle","mid","kick","sub","remaining","setRemaining","refresh","setRefresh","handleClick","_target","targetbox","attributes","box","targetmood","varBuilded","varRemaining","aria-label","mintBoxNFTAction","Navbar","currentAccount","connectWalletAction","renderConnectButton","Rules","CONTRACT_ADDRESS","transformNFTData","NFTData","frequence","imageURI","App","setCurrentAccount","characterNFT","setCharacterNFT","setCharacters","gameContract","setGameContract","setPartyState","setNFTOwned","ethereum","window","signer","ethers","providers","Web3Provider","getSigner","Contract","myEpicGame","abi","getBoxes","a","getAllDefaultBoxes","boxesTxn","boxes","boxData","error","onBoxMint","sender","tokenId","boxIndex","toNumber","alert","toString","onPartyCompleted","checkIfUserHasNFT","boxNFT","on","off","checkIfWalletIsConnected","request","method","accounts","account","checkNetwork","networkVersion","fetchNFTMetadata","provider","getTokenIds","txn5","txn5Cleaned","token","BigNumber","from","boxIndexArray","getNftHolderAttributes","then","receipt","varNFTOwned","boxId","mintBoxNFT","mintTxn","wait","warn","hostAParty","partyTxn","view","setView","sequenceRating","slice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.676082ef.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './MiniGroovebox.css';\r\n\r\n\r\n// ----- GLOBAL AND CONSTANT -----\r\n\r\n// Child\r\n// Parent : MiniGroovebox\r\nfunction MiniSwitch(props) {\r\n\r\n    //   -----   HOOKS   -----\r\n    const [backgroundColor, setBackgroundColor] = useState(\"var(--color2)\");\r\n    \r\n    //   -----   USE EFFECT   -----\r\n    /*     Background Color     */\r\n    useEffect(() => {\r\n        if(props.sequence[props.ins][props.step] == 1) {\r\n            setBackgroundColor('var(--color4)')\r\n        } else if(props.sequence[props.ins][props.step] != 1) {\r\n            setBackgroundColor(\"var(--color2)\")\r\n        }\r\n    }, [props.sequence]);\r\n    \r\n    //   -----   RETURN   -----\r\n    \r\n      return (\r\n    \r\n    // We just create 1 model of switch and define its properties, we create the grid and pass value through parent\r\n    <div style={{backgroundColor: backgroundColor}} className=\"miniswitch\" id={props.id} step={props.step}>\r\n\r\n    </div>\r\n    ) // return\r\n    } // MiniSwitch\r\n\r\nconst MiniGroovebox = (props) => {\r\n\r\n// -----   USE STATE   -----\r\n\r\n\r\n// -----   USE EFFECT   -----\r\n\r\n\r\n  /*     Themes     */\r\n  useEffect(() => {\r\n    if(props.mood == \"tekno\") {\r\n      document.documentElement.style.setProperty('--color1', '#000000');\r\n      document.documentElement.style.setProperty('--color2', '#323232');\r\n      document.documentElement.style.setProperty('--color3', '#FF1E56');\r\n      document.documentElement.style.setProperty('--color4', '#FFAC41');\r\n      document.documentElement.style.setProperty('--color5', '#000441');\r\n    } else if(props.mood == \"dub\") {\r\n      document.documentElement.style.setProperty('--color1', '#000000');\r\n      document.documentElement.style.setProperty('--color2', '#123e01');\r\n      document.documentElement.style.setProperty('--color3', '#fae409');\r\n      document.documentElement.style.setProperty('--color4', '#d4291d');\r\n      document.documentElement.style.setProperty('--color5', '#185302');\r\n    } else if(props.mood == \"jungle\") {\r\n      document.documentElement.style.setProperty('--color1', '#000000');\r\n      document.documentElement.style.setProperty('--color2', '#0a2b1b');\r\n      document.documentElement.style.setProperty('--color3', '#8f9b45');\r\n      document.documentElement.style.setProperty('--color4', '#dfd97f');\r\n      document.documentElement.style.setProperty('--color5', '#445f38');\r\n    }\r\n  }, [props.mood] )\r\n\r\n\r\n// -----   SET STATE METHODS   -----\r\n\r\n\r\n  return (\r\n    <div id=\"mini-groove-box\">\r\n      {/* \r\n      <button id=\"resetbutton\" onClick={resetSequence}>Reset Sequence</button>\r\n      */}\r\n      <div id=\"minidisplaywrapper\">\r\n        <div id=\"minidisplay\">\r\n          {props.mood}\r\n        </div>\r\n      </div>\r\n      <div id=\"miniswitches\" className=\"miniswitchesandvolume\">\r\n\r\n    <>\r\n    {props.sequence.map((row, i)=>{\r\n        return  (\r\n        <div className=\"minigridrow\">\r\n            \r\n        {props.sequence[i].map((d, j) =>\r\n        <div>\r\n        <MiniSwitch \r\n        key={i + j} id={j} ins={i} step={j} sequence={props.sequence} />\r\n        </div>\r\n        )}\r\n        </div>\r\n        )})}     \r\n    </>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MiniGroovebox;","import React, { useEffect, useState } from 'react';\r\nimport { FaStar } from \"react-icons/fa\";\r\n\r\nlet RatingStars;\r\n\r\nconst SequenceRating = (props) => {\r\n\r\n/*     Rating     */\r\nuseEffect(() => {\r\n    let currentRating = rateSequence();\r\n    if (currentRating == 0) {\r\n      RatingStars = \r\n      <div>\r\n        <FaStar className='starOff' />\r\n        <FaStar className='starOff' />\r\n        <FaStar className='starOff' /> \r\n      </div>\r\n      }\r\n    else if(currentRating == 1) {\r\n      RatingStars = \r\n      <div>\r\n        <FaStar className='starOn' />\r\n        <FaStar className='starOff' />\r\n        <FaStar className='starOff' /> \r\n      </div>\r\n      }\r\n    else if(currentRating == 2) {\r\n      RatingStars = \r\n      <div>\r\n        <FaStar className='starOn' />\r\n        <FaStar className='starOn' />\r\n        <FaStar className='starOff' /> \r\n      </div>\r\n      }\r\n    else if(currentRating == 3) {\r\n      RatingStars = \r\n      <div>\r\n        <FaStar />\r\n        <FaStar />\r\n        <FaStar /> \r\n      </div>\r\n      }\r\n    \r\n  }, [props.sequence, props.bpm])\r\n\r\n  /*     Rate sequence     */\r\nconst rateSequence = () => {\r\n    let rate = 0;\r\n    if(props.mood == \"tekno\") {\r\n      if(props.bpm <= 220 && props.bpm >= 100 && props.sequence[0][0] + props.sequence[0][4] + props.sequence[0][8] + props.sequence[0][12]  == 4 || props.sequence[4][0] + props.sequence[4][4] + props.sequence[4][8] + props.sequence[4][12]  == 4) {\r\n        rate = 1;\r\n      }\r\n      if(rate == 1 && props.sequence[5][0] + props.sequence[5][4] + props.sequence[5][8] + props.sequence[5][12]  == 4 || props.sequence[6][0] + props.sequence[6][4] + props.sequence[6][8] + props.sequence[6][12]  == 4) {\r\n        rate = 2;\r\n      }\r\n      if(rate > 0 && props.sequence[7][4] + props.sequence[7][12] == 2) {\r\n        rate += 1;\r\n      }\r\n    } // if tekno\r\n    if(props.mood == \"dub\") {\r\n      if(props.bpm <= 160 && props.bpm >= 90 && props.sequence[0][0] == 1) {\r\n        rate = 1;\r\n      }\r\n      if(rate == 1 && props.sequence[4][8]  == 1) {\r\n        rate = 2;\r\n      }\r\n      if(rate > 0 && sumArray(props.sequence[6]) > 3) {\r\n        rate += 1;\r\n      }\r\n    } // if dub\r\n    if(props.mood == \"jungle\") {\r\n      if(props.bpm <= 200 && props.bpm >= 160 && props.sequence[0][0] + props.sequence[0][10] == 2 && props.sequence[2][4] + props.sequence[2][12] + props.sequence[6][4] + props.sequence[6][12] > 1) {\r\n        rate = 1;\r\n      }\r\n      if(rate == 1 && sumArray(props.sequence[4]) + sumArray(props.sequence[5]) > 1) {\r\n        rate = 2;\r\n      }\r\n      if(sumArray(props.sequence[0]) + sumArray(props.sequence[1]) + sumArray(props.sequence[2]) + sumArray(props.sequence[3]) + sumArray(props.sequence[4]) + sumArray(props.sequence[5]) + sumArray(props.sequence[6]) + sumArray(props.sequence[7]) == 8 && props.sequence[0][0] + props.sequence[1][2] + props.sequence[2][4] + props.sequence[3][6] + props.sequence[4][8] + props.sequence[5][10] + props.sequence[6][12] + props.sequence[7][14] == 8) {\r\n        rate = 3;\r\n      }\r\n    } // if jungle\r\n    props.setRating(rate);\r\n    return rate;\r\n  \r\n  };\r\n  \r\n  /*     sum Array, used for rating     */\r\n  const sumArray = (array) => {\r\n    let sum = 0;\r\n    for(let i = 0; i<array.length; i++) {\r\n      sum += array[i];\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    {RatingStars}\r\n   </div>\r\n  );\r\n\r\n  } // SequenceRating\r\n\r\n export default SequenceRating;","import React, { useEffect, useState } from 'react';\r\nimport './Soundsystem.css';\r\n\r\nconst BuildedSono = (props) => {\r\n\r\n// -----   USE STATE   -----\r\n\r\n\r\n// -----   RENDER   -----\r\nconst renderTop = () => {\r\nlet topteknonumber = props.builded[\"top\"][\"tekno\"];\r\nlet topdubnumber = props.builded[\"top\"][\"dub\"];\r\nlet topjunglenumber = props.builded[\"top\"][\"jungle\"];\r\nlet myTeknoArr = [];\r\nlet myDubArr = [];\r\nlet myJungleArr = [];\r\n\r\nfor(let i = 0; i < topteknonumber; i++) {\r\n    myTeknoArr.push(i);\r\n}\r\n\r\nfor(let i = 0; i < topdubnumber; i++) {\r\n  myDubArr.push(i);\r\n}\r\n\r\nfor(let i = 0; i < topjunglenumber; i++) {\r\n  myJungleArr.push(i);\r\n}\r\n\r\n// faut faire des Cards\r\n\r\n    // Render Methods\r\n    return (\r\n\r\n    <>\r\n    {myTeknoArr.map((number, index) => (\r\n      <div key={number} id=\"buildedtopwrapper\">\r\n        <img src={`https://cloudflare-ipfs.com/ipfs/QmaCyhjGKVv7ctGTqxD9zDEWvuHM12tWYqPAo2kD8HLeDt`} alt={number} />\r\n      </div>\r\n    ))}\r\n\r\n    {myDubArr.map((number, index) => (\r\n      <div key={number} id=\"buildedtopwrapper\">\r\n        <img src={`https://cloudflare-ipfs.com/ipfs/QmXAMdL2TpUj8KYwQ6YcASDeVjKnnsf3rFt9kaV6ELAess`} alt={number} />\r\n      </div>\r\n    ))}\r\n\r\n    {myJungleArr.map((number, index) => (\r\n      <div key={number} id=\"buildedtopwrapper\">\r\n        <img src={`https://cloudflare-ipfs.com/ipfs/QmYfARoTJZSghovyQj6ukVepZkn8YRUhX51Ro9RAqfPkDk`} alt={number} />\r\n      </div>\r\n    ))}\r\n    </>\r\n    );\r\n\r\n} // renderTop\r\n\r\nconst renderMid = () => {\r\n  let midteknonumber = props.builded[\"mid\"][\"tekno\"];\r\n  let middubnumber = props.builded[\"mid\"][\"dub\"];\r\n  let midjunglenumber = props.builded[\"mid\"][\"jungle\"];\r\n  let myTeknoArr = [];\r\n  let myDubArr = [];\r\n  let myJungleArr = [];\r\n  \r\n  for(let i = 0; i < midteknonumber; i++) {\r\n      myTeknoArr.push(i);\r\n  }\r\n  \r\n  for(let i = 0; i < middubnumber; i++) {\r\n    myDubArr.push(i);\r\n  }\r\n  \r\n  for(let i = 0; i < midjunglenumber; i++) {\r\n    myJungleArr.push(i);\r\n  }\r\n  \r\n      // Render Methods\r\n      return (\r\n  \r\n      <>\r\n      {myTeknoArr.map((number, index) => (\r\n        <div key={number} id=\"buildedmidwrapper\">\r\n          <img src={`https://cloudflare-ipfs.com/ipfs/QmUNgESyVv65FCnRFAFQidd6vcf9szgJ6Zux7fygsFT9mv`} alt={number} />\r\n        </div>\r\n      ))}\r\n  \r\n      {myDubArr.map((number, index) => (\r\n        <div key={number} id=\"buildedmidwrapper\">\r\n          <img src={`https://cloudflare-ipfs.com/ipfs/QmTeCKCpKnEuWgzLmhy5YTvMB1wurvXA8FtZugGwo1gvk8`} alt={number} />\r\n        </div>\r\n      ))}\r\n  \r\n      {myJungleArr.map((number, index) => (\r\n        <div key={number} id=\"buildedmidwrapper\">\r\n          <img src={`https://cloudflare-ipfs.com/ipfs/QmTi2adypcZoBWnSL6yzprCPUnKHQWixe7kXyZsp7BeQu7`} alt={number} />\r\n        </div>\r\n      ))}\r\n      </>\r\n      );\r\n  \r\n  } // renderMid\r\n\r\nconst renderKick = () => {\r\n  let kickteknonumber = props.builded[\"kick\"][\"tekno\"];\r\n  let kickdubnumber = props.builded[\"kick\"][\"dub\"];\r\n  let kickjunglenumber = props.builded[\"kick\"][\"jungle\"];\r\n  let myTeknoArr = [];\r\n  let myDubArr = [];\r\n  let myJungleArr = [];\r\n  \r\n  for(let i = 0; i < kickteknonumber; i++) {\r\n      myTeknoArr.push(i);\r\n  }\r\n  \r\n  for(let i = 0; i < kickdubnumber; i++) {\r\n    myDubArr.push(i);\r\n  }\r\n  \r\n  for(let i = 0; i < kickjunglenumber; i++) {\r\n    myJungleArr.push(i);\r\n  }\r\n  \r\n      // Render Methods\r\n      return (\r\n  \r\n      <>\r\n      {myTeknoArr.map((number, index) => (\r\n        <div key={number} id=\"buildedkickwrapper\">\r\n          <img src={`https://cloudflare-ipfs.com/ipfs/QmbRmEBegpTQHbtthHK8UioPkwp9og3fKPuPmjKoF3bh8Q`} alt={number} />\r\n        </div>\r\n      ))}\r\n  \r\n      {myDubArr.map((number, index) => (\r\n        <div key={number} id=\"buildedkickwrapper\">\r\n          <img src={`https://cloudflare-ipfs.com/ipfs/QmbSyj8sHkHjvuf7TMB5H4x5usDxsWNhGATVxCVwPzYz4j`} alt={number} />\r\n        </div>\r\n      ))}\r\n  \r\n      {myJungleArr.map((number, index) => (\r\n        <div key={number} id=\"buildedkickwrapper\">\r\n          <img src={`https://cloudflare-ipfs.com/ipfs/QmaxPAto9RbRRRAmN6oPPbDxfnYGvubs5XGDhbdKSjmrWb`} alt={number} />\r\n        </div>\r\n      ))}\r\n      </>\r\n      );\r\n  \r\n  } // renderKick\r\n\r\n  const renderSub = () => {\r\n    let subteknonumber = props.builded[\"sub\"][\"tekno\"];\r\n    let subdubnumber = props.builded[\"sub\"][\"dub\"];\r\n    let subjunglenumber = props.builded[\"sub\"][\"jungle\"];\r\n    let myTeknoArr = [];\r\n    let myDubArr = [];\r\n    let myJungleArr = [];\r\n    \r\n    for(let i = 0; i < subteknonumber; i++) {\r\n        myTeknoArr.push(i);\r\n    }\r\n    \r\n    for(let i = 0; i < subdubnumber; i++) {\r\n      myDubArr.push(i);\r\n    }\r\n    \r\n    for(let i = 0; i < subjunglenumber; i++) {\r\n      myJungleArr.push(i);\r\n    }\r\n    \r\n        // Render Methods\r\n        return (\r\n    \r\n        <>\r\n        {myTeknoArr.map((number, index) => (\r\n          <div key={number} id=\"buildedsubwrapper\">\r\n            <img src={`https://cloudflare-ipfs.com/ipfs/QmNvRYe3aWUXPFmsAVrARB8iK4TtcDXn6oaFwybAZcpauL`} alt={number} />\r\n          </div>\r\n        ))}\r\n    \r\n        {myDubArr.map((number, index) => (\r\n          <div key={number} id=\"buildedsubwrapper\">\r\n            <img src={`https://cloudflare-ipfs.com/ipfs/QmX195iGxKaK5JQEHmBNs1JGERyfvWFXKx8x5jjWnEhzaR`} alt={number} />\r\n          </div>\r\n        ))}\r\n    \r\n        {myJungleArr.map((number, index) => (\r\n          <div key={number} id=\"buildedsubwrapper\">\r\n            <img src={`https://cloudflare-ipfs.com/ipfs/QmaM1ozSSXSdr3v1TBAQdibgMkoSFy3RS6cJokwrN1FXzE`} alt={number} />\r\n          </div>\r\n        ))}\r\n        </>\r\n        );\r\n    \r\n    } // renderSub\r\n\r\n\r\n\r\n\r\n    return (\r\n  <div id=\"buildedsono\">\r\n    <div id=\"rendertop\">\r\n        {renderTop()}\r\n    </div>\r\n    <div id=\"rendermid\">\r\n        {renderMid()}\r\n    </div>\r\n    <div id=\"renderkick\">\r\n        {renderKick()}\r\n    </div>\r\n    <div id=\"rendersub\">\r\n        {renderSub()}\r\n    </div>\r\n  </div>\r\n\r\n    );\r\n}\r\n\r\nexport default BuildedSono;","import React, { useEffect, useState } from 'react';\r\nimport './Home.css';\r\nimport MiniGroovebox from './../Groovebox/MiniGroovebox.js';\r\nimport BuildedSono from './../Soundsystem/BuildedSono.js';\r\nimport SequenceRating from './../SequenceRating/SequenceRating.js';\r\n\r\nconst Home = (props) => {\r\n\r\nconst [partyText, setPartyText] = useState(\"Host a Party !\");\r\n\r\nuseEffect(() => {\r\n    if(props.partyState == \"partying\") {\r\n        setPartyText(\"Partying...\");\r\n    } else  { \r\n        setPartyText(\"Host a Party !\");\r\n    } \r\n    }, [props.partyState] )\r\n\r\n\r\n\r\n    return (\r\n    <div id=\"homecontent\">\r\n      <div id=\"welcome\">\r\n        <h1>Welcome to <div id=\"title\">Crypto Sonos</div></h1>\r\n      </div>\r\n            <div className=\"card\" id=\"rulescard\" onClick={(e) => {props.handleClickView(e);}}>Rules</div>\r\n        \r\n            <div className=\"buttoncolumn\" id=\"grooveboxarea\">        \r\n                <MiniGroovebox    \r\n                    id=\"grooveboxbuttonimage\"    \r\n                    mood={props.mood}\r\n                    sequence={props.sequence}\r\n                    />\r\n                <SequenceRating \r\n                    sequence={props.sequence} \r\n                    bpm={props.bpm} \r\n                    mood={props.mood} \r\n                    rating={props.rating} \r\n                    setRating={props.setSequenceRating}\r\n                 />\r\n                <div className=\"card\" id=\"grooveboxcard\" onClick={(e) => {props.handleClickView(e);}}>Groovebox</div>\r\n            </div>\r\n            <div className=\"buttoncolumn\" id=\"soundsystemarea\">     \r\n                <div className=\"sonoimage\"> \r\n                <BuildedSono    \r\n                    id=\"soundsystembuttonimage\"    \r\n                    builded={props.builded}\r\n                    setBuilded={props.setBuilded}\r\n                    />\r\n                </div>  \r\n                <div className=\"card\" id=\"soundsystemcard\" onClick={(e) => {props.handleClickView(e);}}>Sound System</div>\r\n            </div>      \r\n            <div className={`card${props.partyState}`} id=\"hostarea\" onClick={props.hostAPartyAction()}>{partyText}</div>\r\n\r\n        \r\n\r\n    </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { useState, useEffect } from \"react\";\r\nimport './Groovebox.css';\r\n\r\n// Child\r\n// Parent : Groovebox\r\nfunction Switch(props) {\r\n\r\n//   -----   HOOKS   -----\r\nconst [backgroundColor, setBackgroundColor] = useState(\"var(--color2)\");\r\nconst [color, setColor] = useState(\"var(--color4)\");\r\n\r\n//   -----   USE EFFECT   -----\r\n/*     Background Color     */\r\nuseEffect(() => {\r\n    let fakebeat = (16 + props.beat - 2) % 16;\r\nif(props.isOn) {\r\n    if(props.step == fakebeat && props.sequence[props.ins][props.step] == 1) {\r\n        setBackgroundColor('var(--color3)');\r\n        setColor('var(--color1)');\r\n    } else if(props.step != fakebeat && props.sequence[props.ins][props.step] == 1) {\r\n        setBackgroundColor('var(--color4)');\r\n        setColor('var(--color1)');\r\n    } else if(props.step == fakebeat && props.sequence[props.ins][props.step] != 1) {\r\n        setBackgroundColor(\"var(--color3)\");\r\n        setColor('var(--color1)');\r\n    } else {\r\n        setBackgroundColor('var(--color2)');\r\n        setColor('var(--color4)');\r\n    }\r\n} else if(!props.isOn) {\r\n    if(props.sequence[props.ins][props.step] == 1) {\r\n        setBackgroundColor('var(--color4)');\r\n        setColor('var(--color5)');\r\n    } else {\r\n        setBackgroundColor('var(--color2)')}\r\n        setColor('var(--color4)');\r\n}\r\n}, [props.beat, props.sequence, props.isOn]);\r\n\r\n//   -----   RETURN   -----\r\n\r\n  return (\r\n\r\n// We just create 1 model of switch and define its properties, we create the grid and pass value through parent\r\n<div style={{backgroundColor: backgroundColor, color: color}} className=\"switch\" id={props.id} step={props.step} onClick={() => {\r\n    props.handleSequence(props.ins, props.step);\r\n    }}>\r\n    {props.step+1}\r\n</div>\r\n) // return\r\n} // Switch\r\n\r\nexport default Switch;","import React, { useEffect, useState } from 'react';\r\nimport './Groovebox.css';\r\nimport Switch from './Switch';\r\nimport { FaPlay } from \"react-icons/fa\";\r\nimport { FaStop } from \"react-icons/fa\";\r\nimport { FaCaretUp } from \"react-icons/fa\";\r\nimport { FaCaretDown } from \"react-icons/fa\";\r\nimport SequenceRating from './../SequenceRating/SequenceRating.js';\r\n\r\nimport * as Tone from 'tone';\r\n\r\n// ----- GLOBAL AND CONSTANT -----\r\n\r\n\r\nconst vol01 = new Tone.Volume().toDestination();\r\nconst vol02 = new Tone.Volume().toDestination();\r\nconst vol03 = new Tone.Volume().toDestination();\r\nconst vol04 = new Tone.Volume().toDestination();\r\nconst vol05 = new Tone.Volume().toDestination();\r\nconst vol06 = new Tone.Volume().toDestination();\r\nconst vol07 = new Tone.Volume().toDestination();\r\nconst vol08 = new Tone.Volume().toDestination();\r\nconst volumeNode = [vol01, vol02, vol03, vol04, vol05, vol06, vol07, vol08];\r\n\r\nvar tekno01 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/tekno01.mp3\").connect(vol01);\r\nvar tekno02 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/tekno03.mp3\").connect(vol02);\r\nvar tekno03 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/tekno06.mp3\").connect(vol03);\r\nvar tekno04 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/tekno07.mp3\").connect(vol04);\r\nvar tekno05 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/tekno02.mp3\").connect(vol05);\r\nvar tekno06 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/tekno04.mp3\").connect(vol06);\r\nvar tekno07 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/tekno05.mp3\").connect(vol07);\r\nvar tekno08 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/tekno08.mp3\").connect(vol08);\r\nvar playerstekno = [tekno01, tekno02, tekno03, tekno04, tekno05, tekno06, tekno07, tekno08];\r\n\r\nvar dub01 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/dub01.mp3\").connect(vol01);\r\nvar dub02 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/dub04.mp3\").connect(vol02);\r\nvar dub03 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/dub06.mp3\").connect(vol03);\r\nvar dub04 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/dub08.mp3\").connect(vol04);\r\nvar dub05 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/dub02.mp3\").connect(vol05);\r\nvar dub06 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/dub05.mp3\").connect(vol06);\r\nvar dub07 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/dub03.mp3\").connect(vol07);\r\nvar dub08 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/18443d138626512b1a06aeb1d043ee4510e529da/public/samples/dub07.mp3\").connect(vol08);\r\nvar playersdub = [dub01, dub02, dub03, dub04, dub05, dub06, dub07, dub08];\r\n\r\nvar jungle01 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/bf08184626454ac0020c7c126d88ae7443e1cd9b/public/samples/jungle01.mp3\").connect(vol01);\r\nvar jungle02 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/bf08184626454ac0020c7c126d88ae7443e1cd9b/public/samples/jungle02.mp3\").connect(vol02);\r\nvar jungle03 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/bf08184626454ac0020c7c126d88ae7443e1cd9b/public/samples/jungle03.mp3\").connect(vol03);\r\nvar jungle04 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/bf08184626454ac0020c7c126d88ae7443e1cd9b/public/samples/jungle04.mp3\").connect(vol04);\r\nvar jungle05 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/bf08184626454ac0020c7c126d88ae7443e1cd9b/public/samples/jungle05.mp3\").connect(vol05);\r\nvar jungle06 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/bf08184626454ac0020c7c126d88ae7443e1cd9b/public/samples/jungle06.mp3\").connect(vol06);\r\nvar jungle07 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/bf08184626454ac0020c7c126d88ae7443e1cd9b/public/samples/jungle07.mp3\").connect(vol07);\r\nvar jungle08 = new Tone.Player(\"https://raw.githubusercontent.com/luckyclutcher/cryptosonos-frontend/bf08184626454ac0020c7c126d88ae7443e1cd9b/public/samples/jungle08.mp3\").connect(vol08);\r\nvar playersjungle = [jungle01, jungle02, jungle03, jungle04, jungle05, jungle06, jungle07, jungle08];\r\n\r\nvar players = playerstekno;\r\n\r\n\r\nvar namestekno = [\"kick 1\", \"jump\", \"hat\", \"crash\", \"kick 2\", \"pump 1\", \"pump 2\", \"rim\"];\r\nvar namesdub = [\"kick\", \"rim\", \"guitar\", \"crash\", \"snare\", \"woodblock\", \"hat\", \"synare\"];\r\nvar namesjungle = [\"kick\", \"rim 1\", \"snare 1\", \"roll 1\", \"roll 2\", \"hat\", \"snare 2\", \"rim 2\"];\r\n\r\nconst moodArray = [\"tekno\", \"dub\", \"jungle\"];\r\n\r\nlet PlayStopButton;\r\n\r\nvar beatvar = 0;\r\n\r\nconst Groovebox = (props) => {\r\n\r\n// -----   USE STATE   -----\r\nconst [started, setStarted] = useState(false);\r\nconst [isOn, setIsOn] = useState(false);\r\nconst [beat, setBeat] = useState(0);\r\nconst [display, setDisplay] = useState(\"click to start\");\r\nconst [names, setNames] = useState(namestekno);\r\n\r\n// -----   USE EFFECT   -----\r\n/*     players     */\r\nuseEffect(() => {\r\n    if(props.mood == \"tekno\") {\r\n      players = playerstekno;\r\n    } else if(props.mood == \"dub\") {\r\n      players = playersdub;\r\n    } else if(props.mood == \"jungle\") {\r\n      players = playersjungle;\r\n    }\r\n  }, [props.mood] )\r\n\r\n/*     names     */\r\nuseEffect(() => {\r\n  if(props.mood == \"tekno\") {\r\n    setNames(namestekno);\r\n  } else if(props.mood == \"dub\") {\r\n    setNames(namesdub);\r\n  } else if(props.mood == \"jungle\") {\r\n    setNames(namesjungle);\r\n  }\r\n}, [props.mood] )\r\n\r\n  /*     PlayStopButton     */\r\n  useEffect(() => {\r\n    if (!isOn) {PlayStopButton = <FaPlay onClick={startStop} className=\"icon\" /> }\r\n    else {PlayStopButton = <FaStop onClick={startStop} className=\"icon\" /> }\r\n  }, [isOn])\r\n\r\n  /*     setDisplay     */\r\n  useEffect(() => {\r\n    if (isOn) {setDisplay(beat+1)}\r\n    else {setDisplay(\"Click to Start !\")}\r\n  }, [beat])\r\n\r\n\r\n  /*     Themes     */\r\n  useEffect(() => {\r\n    if(props.mood == \"tekno\") {\r\n      document.documentElement.style.setProperty('--color1', '#000000');\r\n      document.documentElement.style.setProperty('--color2', '#323232');\r\n      document.documentElement.style.setProperty('--color3', '#FF1E56');\r\n      document.documentElement.style.setProperty('--color4', '#FFAC41');\r\n      document.documentElement.style.setProperty('--color5', '#000441');\r\n    } else if(props.mood == \"dub\") {\r\n      document.documentElement.style.setProperty('--color1', '#000000');\r\n      document.documentElement.style.setProperty('--color2', '#123e01');\r\n      document.documentElement.style.setProperty('--color3', '#fae409');\r\n      document.documentElement.style.setProperty('--color4', '#d4291d');\r\n      document.documentElement.style.setProperty('--color5', '#185302');\r\n    } else if(props.mood == \"jungle\") {\r\n      document.documentElement.style.setProperty('--color1', '#000000');\r\n      document.documentElement.style.setProperty('--color2', '#0a2b1b');\r\n      document.documentElement.style.setProperty('--color3', '#8f9b45');\r\n      document.documentElement.style.setProperty('--color4', '#dfd97f');\r\n      document.documentElement.style.setProperty('--color5', '#445f38');\r\n    }\r\n  }, [props.mood] )\r\n\r\n  /*     setBeat     */\r\n  \r\n  useEffect(() => {\r\n    setBeat(0);\r\n    beatvar = 0;\r\n  }, [isOn] )\r\n  \r\n    \r\n    // on unmount\r\n    // cleanup\r\n    useEffect(() => {\r\n        return () => {\r\n          Tone.Transport.stop();\r\n         Tone.Transport.cancel();\r\n         setStarted(false);\r\n        };\r\n    }, [] )\r\n\r\n// on mount\r\n/*\r\n    useEffect(() => {\r\n    }, []);\r\n  */\r\n\r\n// -----   SET STATE METHODS   -----\r\n\r\n\r\n/*     BPM     */\r\nconst handleBpmChange = (event) => {\r\n    props.setBpm(event.target.value) // just for rerender\r\n    Tone.Transport.bpm.value = event.target.value;\r\n  }\r\n\r\n/*     set Mood     */\r\nconst handleIncrementMood = () => {\r\n    if(moodArray.indexOf(props.mood) < moodArray.length - 1) {\r\n      props.setMood(moodArray[moodArray.indexOf(props.mood) + 1])\r\n    } else {\r\n      props.setMood(moodArray[0])\r\n    }\r\n  }\r\nconst handleDecrementMood = () => {\r\n    if(moodArray.indexOf(props.mood) > 0) {\r\n      props.setMood(moodArray[moodArray.indexOf(props.mood) - 1])\r\n    } else {\r\n      props.setMood(moodArray[moodArray.length - 1])\r\n    }\r\n  }\r\n\r\n/*     Set sequence    */\r\nconst handleSequence = (i, s) => {\r\n    const instIndex = i;\r\n    const step = s;\r\n    let newArr = [...props.sequence];\r\n    if(newArr[instIndex][step] == 0) {\r\n      newArr[instIndex][step] = 1;\r\n    } \r\n    else if(newArr[instIndex][step] == 1) {\r\n      newArr[instIndex][step] = 0;\r\n    }\r\n    props.setSequence(newArr);\r\n  }\r\n/*     Handle Volume change     */\r\nconst handleVolumeChange = e => {\r\n  const { name, value } = e.target;\r\n  volumeNode[name].volume.value = value;\r\n};\r\n\r\n/*     StartStop     */\r\nconst startStop = () => {\r\n  if(isOn) {\r\n    Tone.Transport.stop();\r\n    setIsOn(false);\r\n  } else { // if was off\r\n   Tone.start();\r\n    if(!started) {\r\n      configLoop();\r\n      setStarted(true);\r\n  }\r\n  \r\n    setIsOn(true);\r\n    Tone.Transport.start();\r\n  }\r\n console.log(Tone.Transport.state)\r\n};\r\n\r\n\r\n// NEW\r\n/*     Reset sequence     */\r\n\r\nconst resetSequence = () => {\r\n      let newArr = [...props.sequence];\r\n        for(let i=0; i<8; i++) {\r\n          for(let j=0; j<16; j++) {\r\n            if(newArr[i][j] == 1) {\r\n              newArr[i][j] = 0;\r\n            } // if\r\n          } //for j\r\n        } // for i\r\n      props.setSequence(newArr);\r\n};\r\n\r\n  \r\n// -----   THE LOOP   -----\r\n/* trick here : beatvar and beat are the same but we need to use beatvat(global var) for the audio\r\ncan t work in a foreach loop with a state\r\nbeat is a state and is used for re rendering\r\n*/\r\n\r\n// -----   Callback for the loop   -----\r\nconst repeat = (time) => {    \r\n  props.sequence.forEach((row) => {\r\n    let pad = row[beatvar];\r\n    if (pad === 1) {\r\n      players[props.sequence.indexOf(row)].start(time);\r\n    }\r\n  });\r\n  beatvar = (beatvar + 1) % 16;\r\n  setBeat(beatvar);\r\n};\r\n\r\n//   ----- ConfigLoop   -----\r\nconst configLoop = () => {\r\n    Tone.Transport.bpm.value = 120;\r\n    Tone.Transport.scheduleRepeat(repeat, \"16n\");\r\n  };\r\n  \r\n\r\n  return (\r\n    <div id=\"groove-box\">\r\n      <div id=\"rating\">\r\n      <SequenceRating sequence={props.sequence} bpm={props.bpm} mood={props.mood} rating={props.rating} setRating={props.setRating} />\r\n      </div>\r\n      <div id=\"startstop\">\r\n        {PlayStopButton}\r\n      </div>\r\n      <form id=\"bpm\">\r\n        <label for=\"points\"></label>\r\n        <div id=\"bpmdisplay\">BPM : {Math.floor(Tone.Transport.bpm.value)}</div>\r\n        <input type=\"range\" id=\"points\" min=\"60\" max=\"320\" value={props.bpm} className=\"slider\" onInput={handleBpmChange} onChange={handleBpmChange}></input>\r\n      </form>\r\n\r\n      \r\n      <button id=\"resetbutton\" onClick={resetSequence}>Reset Sequence</button>\r\n      \r\n      <div id=\"displaywrapper\">\r\n        <div id=\"display\">\r\n          {props.mood} - {display} - {started?\"started\":\"not started\"}\r\n        </div>\r\n        <div id=\"bankbutton\">\r\n          <FaCaretUp className=\"icon\" onClick={handleIncrementMood} />\r\n          <div style={{fontSize:'0.5em'}}>Mood</div>\r\n          <FaCaretDown className=\"icon\" onClick={handleDecrementMood} />\r\n        </div>\r\n      </div>\r\n      <div id=\"switches\" className=\"switchesandvolume\">\r\n\r\n    <>\r\n    {props.sequence.map((row, i)=>{\r\n        return  (\r\n        <div className=\"gridrow\">\r\n            \r\n        {props.sequence[i].map((d, j) =>\r\n        <div>\r\n        <Switch \r\n        key={i + j} id={j} ins={i} step={j} beat={beat} isOn={isOn} sequence={props.sequence} volume={props.volume} handleSequence={handleSequence} />\r\n        </div>\r\n        )}\r\n\r\n        <form className=\"volume\">\r\n            <label for=\"points\">{names[i]}</label>\r\n            <input type=\"range\" name={i} id=\"insVolume\" min=\"-40\" max=\"0\" step=\"0.01\" className=\"slider\" onInput={handleVolumeChange} onChange={handleVolumeChange}></input>\r\n        </form>\r\n        </div>\r\n        )})}     \r\n    </>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Groovebox;","import React, { useEffect, useState } from 'react';\r\nimport './Soundsystem.css';\r\n// import subtekno from 'public/pictures/subtekno.png'; // Tell webpack this JS file uses this image\r\n\r\nimport BuildedSono from './BuildedSono';\r\n\r\n//     for testing purpose, will have to get from SC\r\nconst userInventory = {\r\n    top: {\r\n        tekno: 4,\r\n        dub: 2,\r\n        jungle: 1\r\n    },\r\n    mid : {\r\n        tekno: 2,\r\n        dub: 3,\r\n        jungle: 7  \r\n    },\r\n    kick : {\r\n        tekno: 3,\r\n        dub: 2,\r\n        jungle: 1  \r\n    },\r\n    sub : {\r\n        tekno: 3,\r\n        dub: 10,\r\n        jungle: 3  \r\n    }\r\n}\r\n\r\nconst Soundsystem = (props) => {\r\n\r\n// -----   USE STATE   -----\r\n\r\n/* Logic: when user connect we print is total inventory in userInventory.\r\nWe use remaining for display.\r\nWhen he drags drops (or click)s we update builded and remaining.\r\n*/\r\n    /* moving this state in App\r\n    const [builded, setBuilded] = useState(initialBuildedState); */\r\n    const [remaining, setRemaining] = useState({\r\n        top: {\r\n            tekno: props.NFTOwned[0],\r\n            dub: props.NFTOwned[4],\r\n            jungle: props.NFTOwned[8]\r\n        },\r\n        mid : {\r\n            tekno: props.NFTOwned[1],\r\n            dub: props.NFTOwned[5],\r\n            jungle: props.NFTOwned[9]\r\n        },\r\n        kick : {\r\n            tekno: props.NFTOwned[2],\r\n            dub: props.NFTOwned[6],\r\n            jungle: props.NFTOwned[10]\r\n        },\r\n        sub : {\r\n            tekno: props.NFTOwned[3],\r\n            dub: props.NFTOwned[7],\r\n            jungle: props.NFTOwned[11]\r\n        }\r\n    });\r\n    const [refresh, setRefresh] = useState(0);\r\n\r\n    const handleClick = (event) => {\r\n    // get the type and mood of clicked box\r\n        var _target = event.target;\r\n        let targetbox = _target.attributes.box.value;\r\n        let targetmood = _target.attributes.mood.value;\r\n    //if top and top builded < 2, add to builded and remove 1 from remaining\r\n        if(targetbox == \"top\") {\r\n            if(props.builded[targetbox][\"tekno\"] + props.builded[targetbox][\"dub\"] + props.builded[targetbox][\"jungle\"] < 2 && remaining[targetbox][targetmood] > 0) {\r\n                let varBuilded = props.builded;\r\n                varBuilded[targetbox][targetmood] += 1; \r\n                props.setBuilded(varBuilded);\r\n                let varRemaining = remaining;\r\n                varRemaining[targetbox][targetmood] -= 1; \r\n                setRemaining(varRemaining);\r\n            } // if builded < 2 and remaining > 0\r\n        } // if top\r\n\r\n    //if not top and top builded < 4, add to builded and remove 1 from remaining\r\n    if(targetbox != \"top\") {\r\n        if(props.builded[targetbox][\"tekno\"] + props.builded[targetbox][\"dub\"] + props.builded[targetbox][\"jungle\"] < 4 && remaining[targetbox][targetmood] > 0) {\r\n            let varBuilded = props.builded;\r\n            varBuilded[targetbox][targetmood] += 1; \r\n            props.setBuilded(varBuilded);\r\n            let varRemaining = remaining;\r\n            varRemaining[targetbox][targetmood] -= 1; \r\n            setRemaining(varRemaining);\r\n        } // if builded < 4 and remaining > 0\r\n    } // if not top\r\n\r\n        /*\r\n        setBuilded(previousState => {\r\n            return { ...previousState, {box.mood}: box.mood+1}\r\n          });\r\n*/\r\n\r\n        console.log(\"builded : \")\r\n        console.log(props.builded)\r\n        console.log(\"remaining : \")\r\n        console.log(remaining)\r\n        setRefresh(refresh+1) // trick for refreshing\r\n\r\n    }\r\n\r\nconst unBuild = () => {\r\n    props.setBuilded({\r\n        top: {\r\n            tekno: 0,\r\n            dub: 0,\r\n            jungle: 0\r\n        },\r\n        mid : {\r\n            tekno: 0,\r\n            dub: 0,\r\n            jungle: 0  \r\n        },\r\n        kick : {\r\n            tekno: 0,\r\n            dub: 0,\r\n            jungle: 0  \r\n        },\r\n        sub : {\r\n            tekno: 0,\r\n            dub: 0,\r\n            jungle: 0  \r\n        }\r\n    })\r\n    \r\n    /*\r\n    setRemaining({\r\n        top: {\r\n            tekno: 4,\r\n            dub: 2,\r\n            jungle: 1\r\n        },\r\n        mid : {\r\n            tekno: 2,\r\n            dub: 3,\r\n            jungle: 7  \r\n        },\r\n        kick : {\r\n            tekno: 3,\r\n            dub: 2,\r\n            jungle: 1  \r\n        },\r\n        sub : {\r\n            tekno: 3,\r\n            dub: 10,\r\n            jungle: 3  \r\n        }\r\n    }) */\r\n}\r\n\r\n// -----   USE EFFECT   -----\r\n    /*     refresh     */\r\n    // !!!!! not working\r\n    /*\r\n    useEffect(() => {\r\n        console.log(\"refreshing\")\r\n\r\n    }, [refresh] )\r\n    */\r\n\r\n    useEffect(() => {\r\n        setRemaining({\r\n            top: {\r\n                tekno: props.NFTOwned[0]-props.builded.top.tekno,\r\n                dub: props.NFTOwned[4]-props.builded.top.dub,\r\n                jungle: props.NFTOwned[8]-props.builded.top.jungle\r\n            },\r\n            mid : {\r\n                tekno: props.NFTOwned[1]-props.builded.mid.tekno,\r\n                dub: props.NFTOwned[5]-props.builded.mid.dub,\r\n                jungle: props.NFTOwned[9]-props.builded.mid.jungle\r\n            },\r\n            kick : {\r\n                tekno: props.NFTOwned[2]-props.builded.kick.tekno,\r\n                dub: props.NFTOwned[6]-props.builded.kick.dub,\r\n                jungle: props.NFTOwned[10]-props.builded.kick.jungle\r\n            },\r\n            sub : {\r\n                tekno: props.NFTOwned[3]-props.builded.sub.tekno,\r\n                dub: props.NFTOwned[7]-props.builded.sub.dub,\r\n                jungle: props.NFTOwned[11]-props.builded.sub.jungle\r\n            }\r\n        });\r\n\r\n    }, [props.NFTOwned, props.builded] )\r\n\r\n    return (\r\n\r\n<div>\r\n    <div id=\"soundsystem-content\">\r\n        <div id=\"build\">\r\n            <div><BuildedSono builded={props.builded} /></div>\r\n        </div>\r\n        <button className=\"button\" onClick={unBuild}>Unbuild</button>\r\n        <div id=\"inventory\">\r\n            <div className=\"category\">Tekno</div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"topteknobutton\" box=\"top\" mood=\"tekno\" aria-label=\"toptekno\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.top.tekno}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(0)}>Mint</button>\r\n                </div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"midteknobutton\" box=\"mid\" mood=\"tekno\" aria-label=\"midtekno\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.mid.tekno}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(1)}>Mint</button>\r\n                </div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"kickteknobutton\" box=\"kick\" mood=\"tekno\" aria-label=\"kicktekno\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.kick.tekno}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(2)}>Mint</button>\r\n                </div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"subteknobutton\" box=\"sub\" mood=\"tekno\" aria-label=\"subtekno\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.sub.tekno}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(3)}>Mint</button>\r\n                </div>\r\n            <div className=\"category\">Dub</div>\r\n            <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"topdubbutton\" box=\"top\" mood=\"dub\" aria-label=\"topdub\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.top.dub}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(4)}>Mint</button>\r\n                </div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"middubbutton\" box=\"mid\" mood=\"dub\" aria-label=\"middub\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.mid.dub}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(5)}>Mint</button>\r\n                </div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"kickdubbutton\" box=\"kick\" mood=\"dub\" aria-label=\"kickdub\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.kick.dub}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(6)}>Mint</button>\r\n                </div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"subdubbutton\" box=\"sub\" mood=\"dub\" aria-label=\"subdub\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.sub.dub}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(7)}>Mint</button>\r\n                </div>\r\n            <div className=\"category\">Jungle</div>\r\n            <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"topjunglebutton\" box=\"top\" mood=\"jungle\" aria-label=\"topjungle\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.top.jungle}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(8)}>Mint</button>\r\n                </div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"midjunglebutton\" box=\"mid\" mood=\"jungle\" aria-label=\"midjungle\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.mid.jungle}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(9)}>Mint</button>\r\n                </div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"kickjunglebutton\" box=\"kick\" mood=\"jungle\" aria-label=\"kickjungle\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.kick.jungle}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(10)}>Mint</button>\r\n                </div>\r\n                <div className=\"inventoryLine\">\r\n                    <button className=\"boxbutton\" id=\"subjunglebutton\" box=\"sub\" mood=\"jungle\" aria-label=\"subjungle\" onClick={handleClick}></button>\r\n                    <div className=\"inventoryNumber\"> x {remaining.sub.jungle}</div><button className=\"mintbutton\" onClick={props.mintBoxNFTAction(11)}>Mint</button>\r\n                </div>\r\n        </div>\r\n    </div>\r\n    \r\n    \r\n</div>\r\n\r\n    );\r\n}\r\n\r\nexport default Soundsystem;","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = (props) => {\r\n\r\nconst renderConnectButton = () => {\r\n    if (!props.currentAccount) {\r\n        return (<div className=\"navbarItem\" id=\"connectbutton\" onClick={props.connectWalletAction}>Connect</div>);\r\n    }\r\n}\r\n\r\n\r\n    return (\r\n    <div>\r\n    <div id=\"navbar\">\r\n        <div className=\"navbarItem\" id=\"homenavb\" onClick={(e) => {props.handleClickView(e);}}>Home</div>\r\n        <div className=\"navbarItem\" id=\"grooveboxnavb\" onClick={(e) => {props.handleClickView(e);}}>Groovebox</div>\r\n        <div className=\"navbarItem\" id=\"soundsystemnavb\" onClick={(e) => {props.handleClickView(e);}}>Sound System</div>       \r\n        {renderConnectButton()} \r\n        \r\n    </div>\r\n    \r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { useEffect, useState } from 'react';\r\nimport './Rules.css';\r\n\r\nconst Rules = () => {\r\n\r\n    return (\r\n    <div id=\"rulescontent\">\r\n        <h1>How to PLay</h1>\r\n            <h2>Overwiew</h2>\r\n                <div>\r\n                    CryptoSonos is a Play-to-earn NFT mini-game built for Aurora. Players collect NFT boxes to build a Soundsystem. Once they have built a soundsytem and a sequence, they can host a party and run a chance to loot a NFT. The higher the party’s  score, the higher XP amount they earn. XP allows increasing player’s rank, and rank increases the loot chances.  Rank also unlocks the moods.\r\n                </div>\r\n            <h2>Host a party</h2>\r\n                <div>\r\n                    Once every 24h, a player can host a party for free. If he wants, he can pay for hosting more parties before the cooldown ends. Each party has a score based on groovebox sequence and built sound system. \r\n                </div>\r\n            <h2>Groovebox</h2>\r\n                <div>\r\n                    The player can compose a sequence in the Groovebox view. A sequence can be from 0 to 3 stars, by fulfilling requirements depending on mood. The most stars it gives, the higher the party’s score.\r\n                </div>\r\n            <h2>Soundsystem</h2>\r\n                <div>\r\n                Player can build a sound system with the boxes NFT he owns. There are 4 types of boxes (top, mid, kick, sub) for each mood. The more mood compliant, balanced, and biggest soundsystem, the higher the party’s score.\r\n                To prevent a player to use multiple wallet, a freshly received NFT can’t be used before 12h.\r\n                Player start with a boombox, which is not an NFT.\r\n                </div>\r\n            <h2>Mood</h2>\r\n                <div>\r\n                    There are currently 3 moods : tekno, dub, jungle.\r\n                </div>\r\n            <h2>Gameplay</h2>\r\n                <div>\r\n                    Player aims to host parties with the highest possible score to gain XP, and so increase its rank and loot chances. He may want to unlocks moods if it fits better with the NFT he owns. The endgame is to have a full sound system for a mood, and win a Sono NFT.\r\n                </div>\r\n            <h2>Sono NFT</h2>\r\n                <div>\r\n                    layer has to host a party with a full soundsystem, for one mood, and a 3 stars sequence for that mood. This NFT may provide some advantages for the owner in the future. Each wallet can only have 1 Sono NFT for each mood.\r\n                </div>\r\n            <h2>Sound system score</h2>\r\n                <div>\r\n                    -\tEach box provides a base score of 1.\r\n                    -\tIf a box has the same mood than the mood used for the party, it provides an additional 0.5 score.\r\n                    -\tIf built sound system has at least 1 box of each type (sub, kick, mid, top), score is +1.\r\n                    -\tIf built sound system has a perfect ratio, it gives +1 score. Perfect ratio is 1 top, 2 mid, 2 kick, 2 sub. There are 2 possibilities for a perfect ratio : Full sound or half a sound.\r\n                    -\tFull sound mood compliant provides +1 score.\r\n\r\n                    If player hosts a party without a soundsystem, it will use the boombox.\r\n                    Maximum sound system score is 24. Minimum is 0.5 with the boombox.\r\n                </div>\r\n            <h2>Sequence’s score</h2>\r\n                <div>\r\n                    -\t0 star sequence provides score + 0\r\n                    -\t1 star provides score +1\r\n                    -\t2 stars provides score +2\r\n                    -\t3 stars provide score +3\r\n                    Player can’t host a party with an empty sequence.\r\n                </div>\r\n            <h2>Party’s score</h2>\r\n                <div>\r\n                    Party’s score = Sound system score + groovebox score.\r\n                    Maximum party’s score is 27.\r\n                </div>\r\n            <h2>Loot chances</h2>\r\n                <div>\r\n                    The loot chance increases with the score following the formula :\r\n                    Loot chance = 10% +PI*Square(Score)/100\r\n                    If a player loots, he will receive a random NFT. If he has a full Soundsystem with 14 boxes of the same mood and use a 3 stars sequence with this mood, and if he doesn’t already own a Sono NFT for this mood, then if he loots he will receive the Sono NFT for this mood.\r\n                </div>\r\n            <h2>Rank</h2>\r\n                <div>\r\n                    By hosting parties, player also increases its rank by earning XP. The amount of the XP earned for each party is equal to Loot chance*1000. For each 1000 XP earned, rank increases. Here is the ranking rewards map :\r\n                    -\tRank 1 : 2 more Groovebox rows\r\n                    -\tRank 2 : Dub mood\r\n                    -\tRank 3 : 2 more Groovebox rows\r\n                    -\tRank 4 : Jungle mood\r\n                    -\tRank 5: Player can loot Sono NFT \r\n                </div>\r\n            <h2>Tokenomics</h2>\r\n                <div>\r\n                    The only revenue for the team comes from a 5% market fee on NFTs.\r\n                    There are 10 000 Sono NFTs for each mood.\r\n                    There are 100 000 NFT for each boxes and each mood, except the top boxes (only 50 000 for each mood).\r\n                </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Rules;","const CONTRACT_ADDRESS = '0xff71135182A3198EC73F68d681fae5BF3fa646CF';\r\n\r\nconst transformNFTData = (NFTData) => {\r\n    return {\r\n   //   boxIndex: NFTData.boxIndex.toNumber(),\r\n      frequence: NFTData.frequence,\r\n      mood: NFTData.mood,\r\n      imageURI: NFTData.imageURI,\r\n    };\r\n  };\r\n  \r\n  export { CONTRACT_ADDRESS, transformNFTData };","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Home from './Components/Home/Home.js';\nimport Groovebox from './Components/Groovebox/Groovebox.js';\nimport Soundsystem from './Components/Soundsystem/Soundsystem.js';\nimport Navbar from './Components/Navbar/Navbar.js';\nimport Rules from './Components/Rules/Rules.js';\nimport { CONTRACT_ADDRESS, transformNFTData } from './constants';\nimport myEpicGame from './utils/MyEpicGame.json';\nimport { BigNumber, ethers } from 'ethers';\n\nconst App = () => {\n\n//   -----   WEB3   -----\n/*\n  * Just a state variable we use to store our user's public wallet. Don't forget to import useState.\n  */\nconst [currentAccount, setCurrentAccount] = useState(null);\n// const [characterNFT, setCharacterNFT] = useState(null); // old, hold the owned NFTs\nconst [characterNFT, setCharacterNFT] = useState([]);\nconst [characters, setCharacters] = useState([]); // hold the default boxes\nconst [gameContract, setGameContract] = useState(null);\nconst [partyState, setPartyState] = useState('');\nconst [NFTOwned, setNFTOwned] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n// UseEffect\nuseEffect(() => {\n  const { ethereum } = window;\n\n  if (ethereum) {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const gameContract = new ethers.Contract(\n      CONTRACT_ADDRESS,\n      myEpicGame.abi,\n      signer\n    );\n\n    /*\n     * This is the big difference. Set our gameContract in state.\n     */\n    setGameContract(gameContract);\n  } else {\n    console.log('Ethereum object not found');\n  }\n}, []);\n\nuseEffect(() => {\n  const getBoxes = async () => {\n    try {\n      console.log('Getting contract boxes to mint');\n\n      /*\n       * Call contract to get all mint-able boxes\n       */\n      const boxesTxn = await gameContract.getAllDefaultBoxes();\n      console.log('boxesTxn:', boxesTxn);\n\n      /*\n       * Go through all of our boxes and transform the data\n       */\n      const boxes = boxesTxn.map((boxData) =>\n        transformNFTData(boxData)\n      );\n\n      /*\n       * Set all mint-able characters in state\n       */\n      setCharacters(boxes);\n\n\n    } catch (error) {\n      console.error('Something went wrong fetching boxes:', error);\n    }\n  };\n\n  /*\n   * Add a callback method that will fire when this event is received\n   */\n  const onBoxMint = async (sender, tokenId, boxIndex) => {\n    console.log(\n      `BoxNFTMinted - sender: ${sender} tokenId: ${tokenId.toNumber()} boxIndex: ${boxIndex.toNumber()}`\n    );\n    alert(`Your NFT is all done -- see it here: https://testnets.opensea.io/assets/${gameContract.toString()}/${tokenId.toNumber()}`);\n  }\n\n  const onPartyCompleted = async (frequence, mood) => {\n    console.log(\n      `Party hosted with ${frequence} ${mood}`\n    );\n    alert(`Party was fire !`);\n    /*\n     * Once our box NFT is minted we can fetch the metadata from our contract\n     * and set it in state\n     */\n    if (gameContract) {\n      const boxNFT = await gameContract.checkIfUserHasNFT();\n      console.log('boxNFT: ', boxNFT);\n      setCharacterNFT(transformNFTData(boxNFT));\n    }\n  };\n  /*\n   * If our gameContract is ready, let's get boxes!\n   */\n  if (gameContract) {\n    getBoxes();\n        /*\n     * Setup NFT Minted Listener\n     */\n        gameContract.on('BoxNFTMinted', onBoxMint);\n        gameContract.on('PartyComplete', onPartyCompleted);\n  }\n  return () => {\n    /*\n     * When your component unmounts, let;s make sure to clean up this listener\n     */\n    if (gameContract) {\n      gameContract.off('BoxNFTMinted', onBoxMint);\n      gameContract.off('PartyComplete', onPartyCompleted);\n    }\n  };\n}, [gameContract]);\n\n/*\n   * Since this method will take some time, make sure to declare it as async\n   */\nconst checkIfWalletIsConnected = async () => {\n  try {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log('Make sure you have MetaMask!');\n      return;\n    } else {\n      console.log('We have the ethereum object', ethereum);\n\n      /*\n       * Check if we're authorized to access the user's wallet\n       */\n      const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n      /*\n       * User can have multiple authorized accounts, we grab the first one if its there!\n       */\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log('Found an authorized account:', account);\n        setCurrentAccount(account);\n      } else {\n        console.log('No authorized account found');\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n  /*\n  * Implement your connectWallet method here\n  */\nconst connectWalletAction = async () => {\n  try {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      alert('Get MetaMask!');\n      return;\n    }\n\n    /*\n      * Fancy method to request access to account.\n      */\n    const accounts = await ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n\n    /*\n      * Boom! This should print out public address once we authorize Metamask.\n      */\n    console.log('Connected', accounts[0]);\n    setCurrentAccount(accounts[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/*\n * This runs our function when the page loads.\n */\nuseEffect(() => {\n  checkIfWalletIsConnected();\n  checkNetwork();\n}, []);\n\nconst checkNetwork = async () => {\n  try { \n    if (window.ethereum.networkVersion !== '4') {\n      alert(\"Please connect to Rinkeby!\")\n    }\n  } catch(error) {\n    console.log(error)\n  }\n}\n\n/*\n * Add this useEffect right under the other useEffect where you are calling checkIfWalletIsConnected\n */\n\n// fetchNFTMeatadata was declared inside the useEffect where it's used, I pull it off to reuse in mint\nconst fetchNFTMetadata = async () => {\n  console.log('Checking for Character NFT on address:', currentAccount);\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const gameContract = new ethers.Contract(\n    CONTRACT_ADDRESS,\n    myEpicGame.abi,\n    signer\n  );\n\n      // new\n      const txn5 = await gameContract.getTokenIds(currentAccount);\n      if(txn5 != null) {\n        \n        let txn5Cleaned = []; // array of token id\n        txn5.forEach(token => {\n            txn5Cleaned.push(\n            ethers.BigNumber.from(token).toNumber()\n          );\n        });\n        \n        console.log(\"txn5Cleaned : \", txn5Cleaned)\n        \n        // working until there\n\n        let boxIndexArray = [];\n        for(let i = 0; i<txn5Cleaned.length; i++) {\n          let boxIndexOwned = await gameContract.getNftHolderAttributes(txn5Cleaned[i]).then(function(receipt){\n            console.log(\"receipt : \",receipt)\n            boxIndexArray.push(ethers.BigNumber.from(receipt.boxIndex).toNumber());\n            });\n        }\n        console.log(\"boxIndexArray : \", boxIndexArray)\n\n        let varNFTOwned = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for(let i = 0; i < boxIndexArray.length; i++) {\n          varNFTOwned[boxIndexArray[i]] +=1;\n        }\n        setNFTOwned(varNFTOwned);\n        console.log(\"varNFTOwned : \", varNFTOwned)\n        console.log(\"NFTOwned : \", NFTOwned)\n\n      } else {\n        console.log(\"no token id\");\n      }\n\n}; // fetchNFTMetadata\n\n\nuseEffect(() => {\n  /*\n   * The function we will call that interacts with out smart contract\n   */\n\n  \n  /*\n   * We only want to run this, if we have a connected wallet\n   */\n  if (currentAccount) {\n    console.log('CurrentAccount:', currentAccount);\n    fetchNFTMetadata();\n  }\n}, [currentAccount]);\n\n  /*\n   * Create a method that gets all waves from your contract\n   */\n  const getOwnerNFT = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const gameContract = new ethers.Contract(\n          CONTRACT_ADDRESS,\n          myEpicGame.abi,\n          signer\n        );\n\n        /*\n         * Call the getAllWaves method from your Smart Contract\n         */\n        const boxes = await gameContract.getAllOwnedBoxes(currentAccount);\n        /*\n         * We only need address, timestamp, and message in our UI so let's\n         * pick those out\n         */\n        let boxesCleaned = [];\n        boxes.forEach(box => {\n          boxesCleaned.push({\n            frequence: box.frequence,\n            mood: box.mood\n          });\n        });\n\n        /*\n         * Store our data in React State\n         */\n        setCharacters(boxesCleaned);\n      } else {\n        console.log(\"Ethereum object doesn't exist!\")\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n// Actions\nconst mintBoxNFTAction = (boxId) => async () => {\n  try {\n    if (gameContract) {\n      console.log('Minting character in progress...');\n      const mintTxn = await gameContract.mintBoxNFT(boxId);\n      await mintTxn.wait();\n      console.log('mintTxn:', mintTxn);\n      fetchNFTMetadata(); // new\n      \n\n    }\n  } catch (error) {\n    console.warn('MintBoxAction Error:', error);\n  }\n};\n\nconst hostAPartyAction = () => async () => {\n  try {\n    if (gameContract) {\n      setPartyState('partying');\n      console.log('Party in progress...');\n      const partyTxn = await gameContract.hostAParty();\n      await partyTxn.wait();\n      console.log('partyTxn:', partyTxn);\n      setPartyState('');\n    }\n  } catch (error) {\n    console.warn('hostAPartyAction Error:', error);\n    setPartyState('');\n  }\n};\n\n  //    -----   USE STATE   -----\n  const [view, setView] = useState(\"home\");\n  const [mood, setMood] = useState(\"tekno\");\n  const [bpm, setBpm] = useState(120); \n  const [sequence, setSequence] = useState([\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ]);\n  const [builded, setBuilded] = useState({\n    top: {\n        tekno: 0,\n        dub: 0,\n        jungle: 0\n    },\n    mid : {\n        tekno: 0,\n        dub: 0,\n        jungle: 0  \n    },\n    kick : {\n        tekno: 0,\n        dub: 0,\n        jungle: 0  \n    },\n    sub : {\n        tekno: 0,\n        dub: 0,\n        jungle: 0  \n    }\n  });\n  const [sequenceRating, setSequenceRating] = useState(0);\n\n  //   -----   USE EFFFECT   -----\n\n  // STATE FUNCTIONS\n    // navigation\n  const handleClickView = (event) => {\n    setView(event.target.id.slice(0, -4));\n  }\n\n  // RENDER\n  const renderContent = () => {\n    if (view === \"home\") {\n      return <Home handleClickView={handleClickView}\n      mood={mood}\n      setMood={setMood}\n      bpm={bpm}\n      setBpm={setBpm}\n      sequence={sequence}\n      setSequence={setSequence}\n      builded={builded}\n      setBuilded={setBuilded}\n      sequenceRating={sequenceRating}\n      setSequenceRating={setSequenceRating}\n      mintBoxNFTAction={mintBoxNFTAction}\n      hostAPartyAction={hostAPartyAction}\n      partyState={partyState}\n      characterNFT={characterNFT}\n      NFTOwned={NFTOwned}\n      setNFTOwned={setNFTOwned}\n      />;\n    }\n    else if(view === \"groovebox\") {\n      return <Groovebox \n      mood={mood}\n      setMood={setMood}\n      bpm={bpm}\n      setBpm={setBpm}\n      sequence={sequence}\n      setSequence={setSequence}\n      rating={sequenceRating}\n      setRating={setSequenceRating}\n      view={view}\n      />;\n    }\n    else if(view === \"soundsystem\") {\n      return <Soundsystem\n      builded={builded}\n      setBuilded={setBuilded}\n      NFTOwned={NFTOwned}\n      mintBoxNFTAction={mintBoxNFTAction}\n       />;\n    }\n    else if(view === \"rules\") {\n      return <Rules />;\n    }\n  } // rendercontent\n\n\n\n\n  return (\n  <div>\n    \n    <Navbar handleClickView={handleClickView} connectWalletAction={connectWalletAction} currentAccount={currentAccount} />\n    \n    <div id=\"content\">\n      {renderContent()}\n    </div>\n  </div>\n  )\n\n} // App\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}